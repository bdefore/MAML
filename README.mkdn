## Description

MAML is MXML in the spirit of YAML.

## Prerequisites

* [Ruby](http://www.ruby-lang.org/)
    
## Example Usage
    
**WARNING** Use at your own discretion, this is experimental hobby code and should not be relied on for building rockets to space. Check in your code before you mess with this.

	From MXML, generate a creature that nurses its young from teats:
	ruby maml.rb test.mxml test.maml

	From MAML, generate a dinosaur named Bethany:
	ruby maml.rb test.maml Bethany.mxml
	
	Rebuild my dinosaur every time I save my MAML:
	ruby rstakeout.rb "ruby maml.rb test.maml Bethany.mxml" test.maml

	An example MXML:
	
	<s:Application
		xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:s="library://ns.adobe.com/flex/spark"
		creationComplete="onCreationComplete()"
		>

		<s:SkinnableContainer width="100%" height="100%"


			>



			<s:VGroup
				width="100%"
					height="100%">
				<s:HGroup width="100%" height="50">
					<s:Label text="Fwee">
					</s:Label>
					<s:Label text="Fwei" />
					<s:Label text="Fwo"/>
					<s:Label text="Fwum"/>
				</s:HGroup>
				<mx:DataGrid id="dg" dataProvider="{arrayCollectionToBind}" width="100%" height="100%" change="onChange(event)"/>
			</s:VGroup          >
		</s:SkinnableContainer>

	</s:Application>	

	Would convert to MAML:
	
	s:Application
	xmlns:fx         = http://ns.adobe.com/mxml/2009
	xmlns:mx         = library://ns.adobe.com/flex/mx
	xmlns:s          = library://ns.adobe.com/flex/spark
	creationComplete = onCreationComplete()

	    s:SkinnableContainer
	    width  = 100%
	    height = 100%

	        s:VGroup
	        width  = 100%
	        height = 100%

	            s:HGroup
	            width  = 100%
	            height = 50

	                s:Label
	                text = Fwee

	                s:Label
	                text = Fwei

	                s:Label
	                text = Fwo

	                s:Label
	                text = Fwum

	            mx:DataGrid
	            id           = dg
	            dataProvider = {arrayCollectionToBind}
	            width        = 100%
	            height       = 100%
	            change       = onChange(event)

	And back again to MXML:

	<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="onCreationComplete()">
	    <s:SkinnableContainer width="100%" height="100%">
	        <s:VGroup width="100%" height="100%">
	            <s:HGroup width="100%" height="50">
	                <s:Label text="Fwee">
	                </s:Label>
	                <s:Label text="Fwei">
	                </s:Label>
	                <s:Label text="Fwo">
	                </s:Label>
	                <s:Label text="Fwum">
	                </s:Label>
	            </s:HGroup>
	            <mx:DataGrid id="dg" dataProvider="{arrayCollectionToBind}" width="100%" height="100%" change="onChange(event)">
	            </mx:DataGrid>
	        </s:VGroup>
	    </s:SkinnableContainer>
	</s:Application>

## Known Issues

* All comments are stripped
* Tabs become spaces
* Self-closing tags get expanded
* A single <fx:Script> tag is preserved during the conversion.
* If you toss in a non-existent dinosaur, you set the MAML on fire

## Future Ideas

* Make tests for it
* Make more YAML-like MXML export
* Self-close nodes that can in MAML -> MXML step
* Preserve comments in a pleasant format
* Formatting for ActionScript within Script tags
* Remove need for namespacing, generate a massively polluted MXML opening tag that contains all possible namespace enumerations, including any directory in the source path, and prepend these generated namespaces to the classes they would affect. This would probably not be appreciated by parallel developers.
* Something similar for all those silly improt statements

Please fork, have your way with it, and tell me how it goes!
	
## MIT License

Copyright (c) 2011 Buck DeFore

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
